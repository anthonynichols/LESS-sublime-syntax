# [PackageDev] target_format: plist, ext: tmLanguage
---
name: LESS css
fileTypes: [less, css]
scopeName: source.less
uuid: b925c58f-f0a0-4ecb-93bc-de03555e92a8

foldingStartMarker: /\*\*(?!\*)|\{\s*($|/\*(?!.*?\*/.*\S))
foldingStopMarker: (?&lt;!\*)\*\*/|^\s*\}
keyEquivalent: ^~L

# ==============================================================================

patterns:

- include: '#selector'
- include: '#rule-list'
- include: '#property-names'
- include: '#property-values'
- include: '#numeric-values'
- include: '#color-values'
- include: '#comment-line'
- include: '#comment-block'

# ==============================================================================

repository:

# Selectors
  selector:
    name: meta.selector.css
    patterns:
    # HTML tags
      - name: entity.name.tag.css, keyword.control.html.elements
        match: \b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b

      # Class names
      - name: entity.other.attribute-name.class.css
        match: (\.)-?[_a-zA-Z]+[_a-zA-Z0-9-]*
        captures:
          '1': { name: punctuation.definition.entity.css }

      - name: entity.other.attribute-name.id.css
        match: (#)-?[a-zA-Z]+[_a-zA-Z0-9-]*
        captures:
          '1': { name: punctuation.definition.entity.css }

      - name: entity.name.tag.wildcard.css, keyword.control.html.all.elements
        match: \*

      - name: entity.other.attribute-name.pseudo-class.css
        match: (:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\b
        captures:
          '1': { name: punctuation.definition.entity.css }

      - name: entity.other.attribute-name.pseudo-class.ui-state.css
        match: (:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\b
        captures:
          '1': { name: punctuation.defintion.entity.css }

      - begin: ((:)not)(\()
        beginCaptures:
          '3': { name: punctuation.section.function.css }
          '1': { name: entity.other.attribute-name.pseudo-class.css }
          '2': { name: punctuation.definition.entity.css }
        end: \)
        endCaptures:
          '0': { name: punctuation.section.function.css }
        patterns:
        - include: '#selector'

      - contentName: constant.numeric.css
        begin: ((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\()
        beginCaptures:
          '1': { name: entity.other.attribute-name.pseudo-class.css }
          '2': { name: punctuation.definition.entity.css }
          '3': { name: punctuation.section.function.css }
        end: (\))
        endCaptures:
          '1': { name: punctuation.section.function.css }

      - name: entity.other.attribute-name.pseudo-element.css
        match: (:+)(?:-(?:webkit|moz|o)-)?(after|before|first-letter|first-line|selection)\b
        captures:
          '1': { name: punctuation.definition.entity.css }

      - name: entity.other.attribute-name.pseudo-class.css
        match: (:+)(?:-(?:webkit|moz|o)-)?(active|hover|link|visited|focus-inner|focus)\b
        captures:
          '1': { name: punctuation.definition.entity.css }

      - name: meta.attribute-selector.css
        match: >
          (?i)
          (\[)\s*
          (-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)
          (?:\s*([~|^$*]?=)\s*(?:(\3)|((?>(['"])(?:[^\\]|\\.)*?(\6)))))?\s*
          (\])
        captures:
          '1': { name: punctuation.definition.entity.css }
          '2': { name: other.other.attribute-name.attribute.css }
          '3': { name: punctuation.separator.operator.css }
          '4': { name: string.unquoted.attribute-value.css }
          '5': { name: string.quoted.double.attribute-value.css }
          '6': { name: punctuation.definition.string.begin.css }
          '7': { name: punctuation.definition.string.end.css }

# Rules
  rule-list:
    name: meta.property-list.css
    patterns:
    - include: '#comment-line'
    - include: '#comment-block'
    - include: '#selector'
    - include: '#property-names'

    - name: meta.property-value.css
      begin: (:)\s*
      beginCaptures:
        '1': { name: punctuation.separator.key-value.css }
      end: \s*(;|(?=\}))
      endCaptures:
        '1': { name: punctuation.terminator.rule.css }
      patterns:
      - include: '#property-values'

# Property names
  property-names:
    name: support.type.property-name.css
    begin: >
      (?<![-a-z])
      (?=[-a-z])
    end: $|(?![-a-z])
    patterns:
    - name: support.type.property-name.css
      match: \b(word)\b

# Property values
  property-values:
    patterns:
    - include: '#color-values'
    - include: '#position-values'
    - include: '#display-values'

# Position values
  position-values:
    patterns:
    - name: support.constant.property-value.position.css
      match: \b(above(\sleft|\sright)?|absolute|alphabetic|auto|baseline|below(\sleft|\sright)?|bottom|center|fixed|inside|left|middle|outside|page|relative|right|static|top|under(\sleft|\sright)?|)\b

# Display values
  display-values:
    name: support.constant.property-value.display.css
    match: \b(block|flex|inline(-block|-flex|-table)?|list-item|none|table(-caption|-cell|-column(-group)?|-footer-group|-header-group|-row(-group)?)?|)\b

# Numeric Values
  numeric-values:
    patterns:
    - name: constant.other.color.hex-value.css
      match: (#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b
      captures:
        '1': { name: punctiation.definition.constant.css }

    - name: constant.numeric.css
      match: (?x)(?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|ms|s)\b|%)?
      captures:
        '1': { name: keyword.other.unit.css }

# String double quote
  string-double:
    begin: \"
    beginCaptures:
      '0': { name: punctuation.definition.string.begin.css }
    end: \"
    endCaptures:
      '0': { name: punctuation.definition.string.end.css }
    patterns:
    - name: constant.character.escape.css
      match: \\.

# String single quote
  string-single:
    begin: \'
    beginCaptures:
      '0': { name: punctuation.definition.string.begin.css }
    end: \'
    endCaptures:
      '0': { name: punctuation.definition.string.end.css }
    patterns:
    - name: constant.character.escape.css
      match: \\.

# Color values
  color-values:
    patterns:
    - name: support.constant.color.hex.css
      patterns:
      - include: '#numeric-values'

    - name: support.constant.color.w3c-standard-color-name.css
      comment: http://www.w3.org/TR/CSS21/syndata.html#value-def-color
      match: \b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b

    - name: support.constant.color.non-standard.css
      comment: These colours are mostly recognised but will not validate. http://www.w3schools.com/css/css_colornames.asp
      match: \b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\b

    - name: support.constant.color.rgb.css
      begin: (rgba?)\s*(\()
      beginCaptures:
        '1': { name: support.function.misc.css }
        '2': { name: punctuation.section.function.css }
      end: (\))
      endCaptures:
        '1': { name: punctuation.section.function.css }
      patterns:
      - name: constant.other.color.rgb-value.css
        match: (?x)\b(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}(0*(\3))\b(\s*,\s*((0?\.[0-9]+)|[0-1]))?

      - name: constnat.other.color.rgb-percentage.css
        match: \b([0-9]{1,2}|100)\s*%,\s*(\1)\s*%,\s*(\1)\s*%

      - include: '#numeric-values'

# Comment single line
  comment-line:
    name: comment.line.double-slash.less
    begin: //
    captures:
      '0': { name: punctuation.definition.comment.css }
    end: $\n?

# Comment Block
  comment-block:
    name: comment.block.css
    begin: /\*
    captures:
      '0': { name: punctuation.definition.comment.css }
    end: \*/
...